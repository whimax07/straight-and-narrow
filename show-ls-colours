#!/bin/bash

# Script taken from https://askubuntu.com/a/884513


# Extra info collected from various places not all complete.
# Defaults can be found with 'dircolors -p'.
# https://man7.org/linux/man-pages/man5/dir_colors.5.html

# Guid for file attributes.
#     ===================================================================
#     Basic file attributes
#     ===================================================================
#     Below are the color init strings for the basic file types.
#     One can use codes for 256 or more colors supported by modern terminals.
#     The default color codes use the capabilities of an 8 color terminal
#     with some additional attributes as per the following codes:
#
#     Attribute codes:
#     00=none 01=bold 04=underscore 05=blink 07=reverse 08=concealed
#
#     Text color codes:
#     30=black 31=red 32=green 33=yellow 34=blue 35=magenta 36=cyan 37=white
#
#     Background color codes:
#     40=black 41=red 42=green 43=yellow 44=blue 45=magenta 46=cyan 47=white
#
#     NORMAL 00 # no color code at all
#     FILE 00 # regular file: use no color at all
#     RESET 0 # reset to "normal" color
#     DIR 01;34 # directory
#     # If you set this to 'target' instead of a numerical value, the color is as for the file 
#     # pointed to.
#     LINK 01;36 # symbolic link. 

#     MULTIHARDLINK 00 # regular file with more than one link
#     FIFO 40;33 # pipe
#     SOCK 01;35 # socket
#     DOOR 01;35 # door
#     BLK 40;33;01 # block device driver
#     CHR 40;33;01 # character device driver
#     ORPHAN 40;31;01 # symlink to nonexistent file, or non-stat'able file ...
#     MISSING 00 # ... and the files they point to
#     SETUID 37;41 # regular file that is setuid (u+s)
#     SETGID 30;43 # regular file that is setgid (g+s)
#     CAPABILITY 00 # regular file with capability (very expensive to lookup)
#     STICKY_OTHER_WRITABLE 30;42 # dir that is sticky and other-writable (+t,o+w)
#     OTHER_WRITABLE 34;42 # dir that is other-writable (o+w) and not sticky
#     STICKY 37;44 # dir with the sticky bit set (+t) and not other-writable
#     # This is for regular files with execute permission:
#     EXEC 01;32 
#
#     bd = (BLOCK, BLK)   Block device (buffered) special file
#     cd = (CHAR, CHR)    Character device (unbuffered) special file
#     di = (DIR)  Directory
#     do = (DOOR) [Door][1]
#     ex = (EXEC) Executable file (ie. has 'x' set in permissions)
#     fi = (FILE) Normal file
#     ln = (SYMLINK, LINK, LNK)   Symbolic link. If you set this to ‘target’ instead of a numerical value, the color is as for the file pointed to.
#     mi = (MISSING)  Non-existent file pointed to by a symbolic link (visible when you type ls -l)
#     no = (NORMAL, NORM) Normal (non-filename) text. Global default, although everything should be something
#     or = (ORPHAN)   Symbolic link pointing to an orphaned non-existent file
#     ow = (OTHER_WRITABLE)   Directory that is other-writable (o+w) and not sticky
#     pi = (FIFO, PIPE)   Named pipe (fifo file)
#     sg = (SETGID)   File that is setgid (g+s)
#     so = (SOCK) Socket file
#     st = (STICKY)   Directory with the sticky bit set (+t) and not other-writable
#     su = (SETUID)   File that is setuid (u+s)
#     tw = (STICKY_OTHER_WRITABLE)    Directory that is sticky and other-writable (+t,o+w)
#     *.extension =   Every file using this extension e.g. *.rpm = files with the ending .rpm


# Chat GPT:
# [TEXT_ATTR];[FG/BG MODE];[R];[G];[B];[OPTIONAL MORE]
#
# 0;38;2;235;219;178;48;2;29;32;33
#
# Start:
# 0: Reset all attributes (normal text)
#
# Foreground
# 38: Set foreground color
# 2: Use 24-bit "true color" mode
# 235;219;178: RGB values for the foreground color
# 
# Background
# 48: Set background color
# 2: Use 24-bit "true color" mode
# 29;32;33: RGB values for the background color

# LD_Color maker: https://geoff.greer.fm/lscolors/

# For full list of named params: https://github.com/kurusugawa-computer/ls-colors-go/blob/master/parser.go


# For each entry in LS_COLORS, print the type, and description if available,
# in the relevant color.
# If two adjacent colors are the same, keep them on one line.

declare -A descriptions=(
    [bd]="block device"
    [ca]="file with capability"
    [cd]="character device"
    [di]="directory"
    [do]="door"
    [ex]="executable file"
    [fi]="regular file"
    [ln]="symbolic link"
    [mh]="multi-hardlink"
    [mi]="missing file"
    [no]="normal non-filename text"
    [or]="orphan symlink"
    [ow]="other-writable directory"
    [pi]="named pipe, AKA FIFO"
    [rs]="reset to no color"
    [sg]="set-group-ID"
    [so]="socket"
    [st]="sticky directory"
    [su]="set-user-ID"
    [tw]="sticky and other-writable directory"
)

IFS=:
for ls_color in $LS_COLORS; do
    color="${ls_color#*=}"
    type="${ls_color%=*}"

    # Add description for named types.
    desc="${descriptions[$type]}"

    # Separate each color with a newline.
    if [[ $color_prev ]] && [[ $color != "$color_prev" ]]; then
        echo
    fi

    printf "\e[%sm%s%s\e[m " "$color" "$type" "${desc:+ ($desc)}"

    # For next loop
    color_prev="$color"
done
echo
